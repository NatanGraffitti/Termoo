import random
import unicodedata

#listas com a letra A        
lista_palavras_a5 = ["amigo", "andar", "antes", "arroz", "anexo", "altar", "abrir", "amplo", "aceno", "apito", "acima", "aviso", "aliar", "astro", "agua", "ardor", "areia", "autos", "acres", "assar"]
lista_palavras_a6 = ["amavel", "amparo", "apagar", "abrigo", "alento", "abismo", "aliado", "andar", "atento", "arruar", "argola", "alegre", "armado", "aviao", "abrir", "anelar", "atirar", "aceita", "almoço"]
lista_palavras_a7 = ["amarelo", "abrigar", "amassar", "alegria", "andarao", "atuante", "aliados", "aumento", "ansioso", "ameaças", "apontar", "abrange", "armados", "abertos", "alugado", "avançar", "aviador", "aflitos", "assinar", "alugara"]
#listas com a letra E        
lista_palavras_e5 = ["estar", "entra", "exato", "etapa", "elite", "exame", "enche", "errar", "eixos", "ecoar", "expor", "exige", "etnia", "enfim", "epico", "extra", "edema", "exito", "ervas", "egito"]
lista_palavras_e6 = ["esquema", "enlace", "empate", "ensino", "enviar", "estrela", "elevar", "esfera", "entrar", "emenda", "encher", "exigir", "espera", "editar", "exalar", "errado", "esgoto", "estilo", "exibir", "elegir"]
lista_palavras_e7 = ["escrever", "entrada", "ensinar", "enxugar", "esforço", "errante", "enxoval", "enfeite", "eleitor", "emprego", "excesso", "eleiçao", "encontro", "elegido", "emitido", "estudar", "enchera", "engajar", "espelho", "estimar"]
#listas com a letra I        
lista_palavras_i5 = ["ideia", "idolo", "ileso", "impor", "infra", "indio", "inato", "idoso", "imune", "intua", "insta", "isola", "igual", "irado", "impio", "inicio", "intra", "iris", "item", "imune"]
lista_palavras_i6 = ["ideias", "inicio", "idolos", "infame", "irmaos", "imovel", "inveja", "imensa", "impeto", "iguala", "imitar", "isento", "intuir", "idiota", "isolar", "ignora", "iludir", "insumo", "imundo"]
lista_palavras_i7 = ["idiomas", "iniciar", "inverno", "ilusao", "imagina", "impressa", "inedito", "imagens", "invadir", "igualar", "idadear", "irmaos", "imuniza", "ignorar", "ilustre", "invejar", "infeliz", "incitar", "impostos", "insumos"]
#listas com a letra O        
lista_palavras_o5 = ["olhos", "obter", "ordem", "ondas", "outro", "obvio", "ossos", "opaco", "orçar", "ouvir", "ostra", "oxida", "opera", "outra", "orgao", "otimo", "onças", "ofere", "olhar", "orbes"]
lista_palavras_o6 = ["observar", "oferta", "olhado", "orgulho", "ouvido", "outras", "obrigar", "opcoes", "olhara", "opuser", "ombros", "ornato", "orques", "oficio", "obtido", "ousado", "ondas", "oposto", "obstaculo", "otario"]
lista_palavras_o7 = ["objetos", "ocultar", "olhares", "ofertas", "obtiver", "oficial", "ouvidos", "orgulho", "oscilou", "ostenta", "oponham", "ouvinte", "orvalho", "obrigar", "omelete", "orienta", "obrador", "obstina", "odiaram", "oxigena"]
#listas com a letra U        
lista_palavras_u5 = ["unido", "unico", "usina", "urina", "uvaso", "ultra", "usado", "urgir", "urros", "usura", "ungir", "urubu", "ufano", "umido", "ubere", "unhas", "urban", "usura", "uteis", "ursos"]
lista_palavras_u6 = ["uganda", "urgente", "unidos", "usinas", "utopia", "urgida", "urinar", "usavel", "urros", "uivado", "usando", "unidas", "umbigo", "ungido", "urgido", "ultimo", "urubus", "unirem", "uivava", "unisse"]
lista_palavras_u7 = ["univoco", "utiliza", "urgente", "unificar", "usando", "uruguai", "ultraje", "urgindo", "usaveis", "ungidos", "usando", "usufrui", "usurpar", "uranio", "unidade", "urgidos", "uivando", "uniforme", "utilizo", "usassem"]

#INICIO - print que explica as regras do game:
print("Bem-vindo ao jogo!")
print("")
print("REGRAS")
print("1 - Você pode escolher o nivel de dificuldade de 5, 6, ou 7 caracteres.")
print("2 - A quantidade de caracteres sera a quantidade de chances.")
print("3 - Ao errar, mostra quais letras estão na posição correta.")
print("4 - Pode usar Ç, mas não acentos.")
print("5 - O jogo termina ao fim das tentativas.")
print("")
print("Boa sorte!")
print("")

#inputs que solicitam o nivel de dificuldade do jogo e com qual letra irá começar a palavra para poder assim escolher a lista onde vai ser usado o random
quantidade_letras = input("Digite com quantas letras você deseja que a palavra tenha (5, 6 ou 7): ")
letra_inicial = input("Digite a vogal inicial da palavra (a, e, i, o, u): ")

#função que com base nas entradas do user selecionam a lista respectiva
def escolher_palavra(letra, tamanho):
    if letra == 'a':
        if tamanho == "5":
            return random.choice(lista_palavras_a5)
        elif tamanho == "6":
            return random.choice(lista_palavras_a6)
        elif tamanho == "7":
            return random.choice(lista_palavras_a7)
            
    elif letra == 'e':
        if tamanho == "5":
            return random.choice(lista_palavras_e5)
        elif tamanho == "6":
            return random.choice(lista_palavras_e6)
        elif tamanho == "7":
            return random.choice(lista_palavras_e7)
            
    elif letra == 'i':
        if tamanho == "5":
            return random.choice(lista_palavras_i5)
        elif tamanho == "6":
            return random.choice(lista_palavras_i6)
        elif tamanho == "7":
            return random.choice(lista_palavras_i7)
            
    elif letra == 'o':
        if tamanho == "5":
            return random.choice(lista_palavras_o5)
        elif tamanho == "6":
            return random.choice(lista_palavras_o6)
        elif tamanho == "7":
            return random.choice(lista_palavras_o7)
            
    elif letra == 'u':
        if tamanho == "5":
            return random.choice(lista_palavras_u5)
        elif tamanho == "6":
            return random.choice(lista_palavras_u6)
        elif tamanho == "7":
            return random.choice(lista_palavras_u7)
#se não for correspondente com as listas da opção inválida            
    else:
        print("Opção inválida.")
        return None

#função que libera as letras que estiverem na posição certa com a palavra escolhida e se não, coloca _
def verificar_tentativa(palavra, tentativa):
    resultado = "" #variável que recebe 
    for i in range(len(palavra)): #p/ indice no espaço de palavra:
        if tentativa[i] == palavra[i]: #se o indice (letra) em tentativa for igual (mesmo local da palavra correta)
            resultado += tentativa[i] #o índice completa a letra no espaço 
        else:
            resultado += "_" #se não, completa o espaço com _
    return resultado

#chama a função e escolhe uma palavra random da lista com base na vogal inicial e na quantidade de letras
palavra = escolher_palavra(letra_inicial, quantidade_letras) # a palavra escolhida é armazenada na variável palavra

#função para não autorizar o uso de acentos nos chutes
def remover_acentos(texto):
    return ''.join(
        c for c in unicodedata.normalize('NFD', texto)
        if unicodedata.category(c) != 'Mn'
    )

if palavra: #se em palavra
    tentativas = int(quantidade_letras) #tentativas recebe o inteiro respectivo a quantidade de letras
    for tentativa_num in range(tentativas): #para o numero de tentativas no espaço de tentativas - define quantidade de tentativas == quantidade de letras
        tentativa = input(f"Tentativa {tentativa_num + 1}: ") #imput que recebe a primeira tentativa do user em terminal
        tentativa = remover_acentos(tentativa.lower()) #remove acentos possíveis na entrada do usuário
        
        #se a largura (numero de letras) da tentativa for diferente da quantidade de letras definifa    
        if len(tentativa) != len(palavra):
            print(f"A palavra deve ter exatamente {len(palavra)} letras. Tente novamente.")
            continue #printa avisando e não tira uma chance de chute do user 
        
        if tentativa[0] != letra_inicial: #se a tentiva começar com a letra diferente do combinado
            print(f"A palavra deve começar com a letra '{letra_inicial}'. Tente novamente.")
            continue #printa informando e nao tira a chance de chute tambem
        
        if tentativa == palavra: #se a tentativa for igual a palavra printa uma mensagem
            print(f"Parabéns! Você acertou: {palavra}")
            break
        else:
            resultado = verificar_tentativa(palavra, tentativa) #se não, retorna as letras que estão na posição correta
            print(f"Letras corretas: {resultado}")
    else:
        print(f"Fim de jogo! A palavra era: {palavra}") #print final caso a pessoa erre todos os chutes
